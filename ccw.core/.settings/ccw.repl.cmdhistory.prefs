#Wed Jul 20 15:56:58 CEST 2011
cmdhistory=["(def e1 [{\:a 1 \:b \\"b\\" \:c 300 }{\:a 2 \:b \\"a\\" \:c 500 }])\\r\\n(def e2 [{\:a 1 \:d \\"blah\\"}{\:a 2 \:d \\"blah2\\"}])" "(map merge e1 e2)" "(def toto.titi \\"salut\\")" "toto.titi" "user/toto.titi" "toto.titi" "\#'toto.titi" "@\#'toto.titi" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" "(doc delay)" "(doc add-watch)" "(def d (delay nil))" "(add-watch d \:toto identity)" "(def f (future \\"foo\\"))" "(add-watch f \:future identity)" "(macroexpand '(let [toto] titi))" "(macroexpand '(let [toto tutu] titi))" "(macroexpand '\#(let [toto tutu] titi))" "(doc delay)" "(true? true)" "(true? \\"\\")" "(doc future)" "(compile 'ccw.editors.antlrbased.PareditAutoEditStrategy)" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" "(binding [*compile-path* \\"C\:\\\\Users\\\\Laurent\\\\var\\\\projects\\\\ccw\\\\ccw.core\\\\classes\\", *compile-files* true] (compile 'ccw.editors.antlrbased.EditorSupport))" "(binding [*compile-path* \\"C\:/Users/Laurent/var/projects/ccw/ccw.core/classes\\", *compile-files* true] (compile 'ccw.editors.antlrbased.EditorSupport))" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\PareditAutoEditStrategy.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" ";; Loading file src\\\\paredit\\\\parser.clj" ";; Loading file src\\\\net\\\\cgrand\\\\parsley\\\\lrplus.clj" ";; Loading file src\\\\net\\\\cgrand\\\\parsley.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureFormat.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureHyperlink.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureHyperlinkDetector.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureHyperlink.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureHyperlinkDetector.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\handlers.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\StacktraceHyperlink.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureHyperlink.clj" ";; Loading file src\\\\paredit\\\\parser.clj" ";; Switching to paredit.parser namespace" "(def d [\\"(salut\\" \\" les c\\" \\"opa\\" \\"ins)\\"])" ";; Switching to paredit.parser namespace" "(dser-ser-inc d)" "(def d (var-get \#'user/d))" "d" "(def d (var-get \#'user/d))" "(dser-ser-inc d)" ";; Loading file src\\\\paredit\\\\parser.clj" ";; Switching to paredit.parser namespace" "(dser-ser-inc d)" ";; Loading file test\\\\paredit\\\\tests.clj" ";; Switching to paredit.tests namespace" "(pts)" "(sexp \\"toto\\")" ";; Loading file src\\\\paredit\\\\parser.clj" ";; Switching to paredit.parser namespace" "(sexp \\"toto\\")" "(sexp \\"()\\")" ";; Loading file src\\\\net\\\\cgrand\\\\parsley\\\\lrplus.clj" ";; Loading file src\\\\net\\\\cgrand\\\\parsley\\\\fold.clj" "(sexp \\"\\")" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\PareditAutoEditStrategy.clj" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\ClojureFormat.clj" "(doc assert)" "*assert*" ";; Loading file src\\\\ccw\\\\editors\\\\antlrbased\\\\EditorSupport.clj" ";; Loading file src\\\\paredit\\\\parser.clj" ";; Switching to paredit.parser namespace" "(edit-buffer nil 0 0 \\"coucou\\")" "(edit-buffer *1 0 0 \\"coucou\\")" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"123\\"))" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"123\\") (p/edit 0 3 \\"\\"))" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"123\\") (p/edit 0 3 nil))" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"123\\") p/parse-tree)" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"yo man\\") p/parse-tree)" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"yo() man\\") p/parse-tree)" "(-> sexp p/incremental-buffer (p/edit 0 0 \\"yo() man\\") (p/edit 0 0 \\"c\\") p/parse-tree)" ";; Loading file src\\\\net\\\\cgrand\\\\parsley\\\\fold.clj" ";; Loading file src\\\\paredit\\\\parser.clj" ";; Switching to paredit.parser namespace" "(sexp \\"salut\\")" ";; Switching to paredit.parser namespace" "(sexp \\"salut\\")" "(sexp \\"salut)\\")" "(sexp \\"(salut||)|\\")" "(sexp \\"(salut||)|]]]]]\\")" ";; Loading file test\\\\paredit\\\\tests.clj" ";; Switching to paredit.tests namespace" "(pts)" ";; Loading file test\\\\paredit\\\\tests.clj" ";; Switching to paredit.tests namespace" "(pts)" "(pprint (sexp \\"foo3 bar baz\\"))" "(defprotocol Addable\\r\\n (add-fields [this]))" "(defrecord MyRecord [a b])" "(doc extend-type)" "(extend-type MyRecord\\r\\n Addable\\r\\n (add-fields [this] (+ a b)))" "(extend-type MyRecord\\r\\n Addable\\r\\n (add-fields [this] (+ (this a) (this b))))" "(extend-type MyRecord\\r\\n Addable\\r\\n (add-fields [this] (+ (this \:a) (this \:b))))" "(defn indirect-adder [a b]\\r\\n (add-fields (MyRecord. a b)))" "(indirec-adder 1 2)" "(indirect-adder 1 2)" "(extend-type MyRecord\\r\\n Addable\\r\\n (add-fields [this] (+ (\:a this) (\:b this))))" "(indirect-adder 1 2)" "(binding [add-fields (fn [_] \\"hello\!\\")] (indirect-adder 1 2))" ";; Switching to paredit.parser namespace" "(sexp \\"]\\")" "(def a (ref {\:document nil}))" "a" "@a" "(dosync (alter a assoc \:document \:d))" "a" "@a" ";; Loading file src\\\\paredit\\\\parser.clj"]
eclipse.preferences.version=1
